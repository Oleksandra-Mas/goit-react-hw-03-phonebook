{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/ContactListItem/ContactListItem.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","helpers/LocalStorage.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleInputChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","Form","className","styles","form","Label","htmlFor","Control","type","pattern","title","required","onChange","id","Button","variant","Component","ContactListItem","contact","onDelete","item","href","onClick","ContactList","contacts","contact_list","map","Filter","handleFilterChange","filterId","filter","label","placeholder","apiLS","addToList","list","localStorage","getItem","setItem","JSON","stringify","getFromList","parse","App","addContact","data","checkUniqueName","prevState","alert","deleteContact","changeFilter","toLowerCase","findIndex","getFilteredContacts","includes","prevProps","filteredContacts","length","Alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,aAAe,oC,mBCAjCD,EAAOC,QAAU,CAAC,KAAO,gC,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,wB,mQCMpBC,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAOZC,OAASC,IAAQC,W,EACjBC,SAAWF,IAAQC,W,EACnBE,kBAAoB,SAAAC,GAChB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOT,EAAf,EAAeA,KACf,EAAKU,SAAL,eACKV,EAAOS,K,EAGhBE,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGTA,MAAQ,WACJ,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAEtC,WACI,MAAyBe,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACI,eAACgB,EAAA,EAAD,CAAMC,UAAWC,IAAOC,KAAMN,SAAUE,KAAKL,aAA7C,UACI,eAACM,EAAA,EAAKI,MAAN,CAAYC,QAASN,KAAKd,OAA1B,iBAEI,cAACe,EAAA,EAAKM,QAAN,CACIC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRlB,MAAOT,EACP4B,SAAUZ,KAAKV,kBACfuB,GAAIb,KAAKd,YAGjB,eAACe,EAAA,EAAKI,MAAN,CAAYC,QAASN,KAAKX,SAA1B,mBAEI,cAACY,EAAA,EAAKM,QAAN,CACIC,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRlB,MAAOR,EACP2B,SAAUZ,KAAKV,kBACfuB,GAAIb,KAAKX,cAGjB,cAACyB,EAAA,EAAD,CAAQC,QAAQ,eAAeP,KAAK,SAApC,gC,GAzDUQ,aAgEXlC,I,kCCnETmC,E,4MASFlC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,4CAEZ,WACI,MAA8Be,KAAKH,MAA3BqB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjB,OACI,qBAAIjB,UAAWC,IAAOiB,KAAtB,UACI,4BAAIF,EAAQlC,OACZ,mBAAGqC,KAAM,OAASH,EAAQjC,OAA1B,SAAmCiC,EAAQjC,SAC3C,cAAC6B,EAAA,EAAD,CACIC,QAAQ,eACRP,KAAK,SACLc,QAAS,WACLH,EAASD,EAAQL,KAJzB,2B,GAnBcG,aAgCfC,IChCA,SAASM,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,SAC5C,OACI,oBAAIjB,UAAWC,IAAOsB,aAAtB,SACKD,EAASE,KAAI,SAAAR,GAAO,OACjB,cAAC,EAAD,CAEIA,QAASA,EACTC,SAAUA,GAFLD,EAAQL,S,qBCF3Bc,E,4MAMFC,mBAAqB,SAAArC,GACjB,IAAQE,EAAUF,EAAMC,OAAhBC,MACR,EAAKI,MAAMe,SAASnB,I,EAExBoC,SAAW1C,IAAQC,W,4CACnB,WACI,MAA0BY,KAAKH,MAAvBiC,EAAR,EAAQA,OAAQpB,EAAhB,EAAgBA,MAChB,OACI,wBAAOR,UAAWC,IAAO4B,MAAOzB,QAASN,KAAK6B,SAA9C,UACI,+BAAOnB,IACP,cAACT,EAAA,EAAKM,QAAN,CACIC,KAAK,OACLxB,KAAK,SACL2B,UAAQ,EACRlB,MAAOqC,EACPlB,SAAUZ,KAAK4B,mBACfI,YAAY,YACZnB,GAAIb,KAAK6B,kB,GAvBRb,aA6BNW,ICzBAM,EADD,CAAEC,UAVE,SAAUzC,GAC1B,IAAI0C,EAAOC,aAAaC,QAAQ,YAC3BF,IAAMA,EAAO,IAClBC,aAAaE,QAAQ,WAAYC,KAAKC,UAAU/C,KAOvBgD,YAJP,WAClB,IAAMN,EAAOI,KAAKG,MAAMN,aAAaC,QAAQ,aAC7C,OAAOF,GAAc,KCGFQ,E,4MACnB5D,MAAQ,CACNyC,SAAU,GACVM,OAAQ,I,EAeVc,WAAa,SAACC,IACyB,IAArC,EAAKC,gBAAgBD,EAAK7D,MACtB,EAAKU,UAAS,SAACqD,GAAD,MAAgB,CAC5BvB,SAAS,GAAD,mBACHuB,EAAUvB,UADP,cAEJX,GAAI1B,IAAQC,YAAeyD,SAGjCG,MAAM,GAAD,OAAIH,EAAK7D,KAAT,6B,EAEXiE,cAAgB,SAACpC,GACf,EAAKnB,UAAS,SAACqD,GAAD,MAAgB,CAC5BvB,SAAU,YAAIuB,EAAUvB,UAAUM,QAAO,SAACZ,GAAD,OAAaA,EAAQL,KAAOA,U,EAIzEqC,aAAe,SAACL,GACd,EAAKnD,SAAS,CAAEoC,OAAQe,EAAKM,iB,EAG/BL,gBAAkB,SAAC9D,GAEjB,OADqB,EAAKD,MAAlByC,SACQ4B,WAAU,SAAClC,GAAD,OAAaA,EAAQlC,OAASA,M,EAG1DqE,oBAAsB,WACpB,MAA6B,EAAKtE,MAA1ByC,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAClB,OAAON,EAASM,QAAO,SAACZ,GAAD,OACrBA,EAAQlC,KAAKmE,cAAcG,SAASxB,O,uDAxCxC,WACE,IAAMN,EAAWS,EAAMQ,cACvBzC,KAAKN,SAAS,CAAE8B,e,gCAGlB,SAAmB+B,EAAWR,GAC5B,IAAQvB,EAAaxB,KAAKjB,MAAlByC,SACJA,IAAauB,EAAUvB,UACzBS,EAAMC,UAAUV,K,oBAoCpB,WACE,IAAQM,EAAW9B,KAAKjB,MAAhB+C,OACF0B,EAAmBxD,KAAKqD,sBAC9B,OACE,sBAAKnD,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAaJ,SAAUE,KAAK4C,aAC5B,0CACA,cAAC,EAAD,CACElC,MAAO,wBACPoB,OAAQA,EACRlB,SAAUZ,KAAKkD,eAEhBM,EAAiBC,OAChB,cAAClC,EAAD,CACEC,SAAUgC,EACVrC,SAAUnB,KAAKiD,gBAGjB,cAACS,EAAA,EAAD,CAAOxD,UAAU,QAAQa,QAAQ,OAAjC,kC,GArEuBC,aCNjC2C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.429da747.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__37oat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__3MGUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1jZDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1HEph\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    nameId = shortid.generate();\n    numberId = shortid.generate();\n    handleInputChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n    render() {\n        const { name, number } = this.state;\n        return (\n            <Form className={styles.form} onSubmit={this.handleSubmit}>\n                <Form.Label htmlFor={this.nameId}>\n                    Name\n                    <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={this.handleInputChange}\n                        id={this.nameId}\n                    />\n                </Form.Label>\n                <Form.Label htmlFor={this.numberId}>\n                    Number\n                    <Form.Control\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={this.handleInputChange}\n                        id={this.numberId}\n                    />\n                </Form.Label>\n                <Button variant=\"outline-dark\" type=\"sumbit\">\n                    Add contact\n                </Button>\n            </Form>\n        );\n    }\n}\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport styles from './ContactListItem.module.scss';\nclass ContactListItem extends Component {\n    static propTypes = {\n        contact: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n        onDelete: PropTypes.func.isRequired,\n    };\n    state = {\n        name: '',\n        number: '',\n    };\n    render() {\n        const { contact, onDelete } = this.props;\n        return (\n            <li className={styles.item}>\n                <p>{contact.name}</p>\n                <a href={'tel:' + contact.number}>{contact.number}</a>\n                <Button\n                    variant=\"outline-dark\"\n                    type=\"button\"\n                    onClick={() => {\n                        onDelete(contact.id);\n                    }}\n                >\n                    Delete\n                </Button>\n            </li>\n        );\n    }\n}\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\nimport ContactListItem from '../ContactListItem/';\n\nexport default function ContactList({ contacts, onDelete }) {\n    return (\n        <ul className={styles.contact_list}>\n            {contacts.map(contact => (\n                <ContactListItem\n                    key={contact.id}\n                    contact={contact}\n                    onDelete={onDelete}\n                />\n            ))}\n        </ul>\n    );\n}\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Form } from 'react-bootstrap';\n\nimport styles from './Filter.module.scss';\n\nclass Filter extends Component {\n    static propTypes = {\n        filter: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        onChange: PropTypes.func.isRequired,\n    };\n    handleFilterChange = event => {\n        const { value } = event.target;\n        this.props.onChange(value);\n    };\n    filterId = shortid.generate();\n    render() {\n        const { filter, title } = this.props;\n        return (\n            <label className={styles.label} htmlFor={this.filterId}>\n                <span>{title}</span>\n                <Form.Control\n                    type=\"text\"\n                    name=\"filter\"\n                    required\n                    value={filter}\n                    onChange={this.handleFilterChange}\n                    placeholder=\"Search...\"\n                    id={this.filterId}\n                />\n            </label>\n        );\n    }\n}\nexport default Filter;\n","const addToList = function (value) {\r\n  let list = localStorage.getItem(\"contacts\");\r\n  if (!list) list = [];\r\n  localStorage.setItem(\"contacts\", JSON.stringify(value));\r\n};\r\n\r\nconst getFromList = function () {\r\n  const list = JSON.parse(localStorage.getItem(\"contacts\"));\r\n  return list ? list : [];\r\n};\r\nconst apiLS = { addToList, getFromList };\r\nexport default apiLS;\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter/\";\r\nimport apiLS from \"./helpers/LocalStorage\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = apiLS.getFromList();\r\n    this.setState({ contacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (contacts !== prevState.contacts) {\r\n      apiLS.addToList(contacts);\r\n    }\r\n  }\r\n\r\n  addContact = (data) => {\r\n    this.checkUniqueName(data.name) === -1\r\n      ? this.setState((prevState) => ({\r\n          contacts: [\r\n            ...prevState.contacts,\r\n            { id: shortid.generate(), ...data },\r\n          ],\r\n        }))\r\n      : alert(`${data.name} is already in contacts`);\r\n  };\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts].filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  changeFilter = (data) => {\r\n    this.setState({ filter: data.toLowerCase() });\r\n  };\r\n\r\n  checkUniqueName = (name) => {\r\n    const { contacts } = this.state;\r\n    return contacts.findIndex((contact) => contact.name === name);\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          title={\"Find contacts by name\"}\r\n          filter={filter}\r\n          onChange={this.changeFilter}\r\n        />\r\n        {filteredContacts.length ? (\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDelete={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <Alert className=\"Alert\" variant=\"dark\">\r\n            Nothing found\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}